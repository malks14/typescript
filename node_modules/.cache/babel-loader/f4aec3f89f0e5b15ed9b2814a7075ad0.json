{"ast":null,"code":"var _jsxFileName = \"/Users/guidogreco/Udemy/React/TypeScript/TS+React/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  const todoTextInputRef = useRef(null);\n\n  const submitHandler = event => {\n    var _todoTextInputRef$cur;\n\n    event.preventDefault();\n    const enteredText = (_todoTextInputRef$cur = todoTextInputRef.current) === null || _todoTextInputRef$cur === void 0 ? void 0 : _todoTextInputRef$cur.value;\n\n    if ((enteredText === null || enteredText === void 0 ? void 0 : enteredText.trim().length) === 0) {\n      //throw an error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"text\",\n      children: \"Todo text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"text\",\n      ref: todoTextInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"1sC+Y33RgTD/2YiEPp+XilOCiTo=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"sources":["/Users/guidogreco/Udemy/React/TypeScript/TS+React/src/components/NewTodo.tsx"],"names":["React","useRef","NewTodo","props","todoTextInputRef","submitHandler","event","preventDefault","enteredText","current","value","trim","length","onAddTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;AAEA,MAAMC,OAAsD,GAAIC,KAAD,IAAW;AAAA;;AACxE,QAAMC,gBAAgB,GAAGH,MAAM,CAAmB,IAAnB,CAA/B;;AAEA,QAAMI,aAAa,GAAIC,KAAD,IAA4B;AAAA;;AAChDA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,WAAW,4BAAGJ,gBAAgB,CAACK,OAApB,0DAAG,sBAA0BC,KAA9C;;AAEA,QAAI,CAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEG,IAAb,GAAoBC,MAApB,MAA+B,CAAnC,EAAsC;AAClC;AACA;AACH;;AACDT,IAAAA,KAAK,CAACU,SAAN,CAAgBL,WAAhB;AACD,GATD;;AAWA,sBACE;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,GAAG,EAAED;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBD;;GAAMF,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nconst NewTodo: React.FC<{onAddTodo: (text: string) => void}> = (props) => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    const enteredText = todoTextInputRef.current?.value;\n\n    if (enteredText?.trim().length === 0) {\n        //throw an error\n        return;\n    }\n    props.onAddTodo(enteredText);\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <label htmlFor=\"text\">Todo text</label>\n      <input type=\"text\" id=\"text\" ref={todoTextInputRef} />\n      <button>Add Todo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n"]},"metadata":{},"sourceType":"module"}